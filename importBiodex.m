function [data,metadata] = importBiodex(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [SET, REP, MSEC, TORQUE, POSITION, POS_ANAT, VELOCITY] =
%  IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  [SET, REP, MSEC, TORQUE, POSITION, POS_ANAT, VELOCITY] =
%  IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  [Set, Rep, mSec, TORQUE, POSITION, POS_ANAT, VELOCITY] = importfile("C:\Users\nfq3bd\Desktop\Research\Sex Scaling\Biodex\Biodex Data\9_9_2022\Knee_calf.txt", [53, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 19-Sep-2022 10:51:01

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [53, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 8, "Encoding", "UTF-8");

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["Set", "Rep", "mSec", "TORQUE", "POSITION", "POS_ANAT", "VELOCITY", "Var8"];
opts.SelectedVariableNames = ["Set", "Rep", "mSec", "TORQUE", "POSITION", "POS_ANAT", "VELOCITY"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.ConsecutiveDelimitersRule = "join";
opts.LeadingDelimitersRule = "ignore";

% Specify variable properties
opts = setvaropts(opts, "Var8", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "Var8", "EmptyFieldRule", "auto");
opts = setvaropts(opts, "Set", "TrimNonNumeric", true);
opts = setvaropts(opts, "Set", "ThousandsSeparator", ",");

%% Import the data
tbl = readtable(filename, opts);
ind.rep1 = ((tbl.Rep== 1)) ;
ind.rep2 = ((tbl.Rep== 2)) ;
angles = angleImport(filename);
for na = 1:length(angles)
    ind.(['angle',num2str(angles(1,na))]) = (tbl.Set==na) ;
    cangle = (['angle',num2str(angles(1,na))]) ;
    
    for nReps = 1:2
        crep = ['rep',num2str(nReps)] ;
        itrial = (ind.(cangle)) & (ind.(crep)) ;
        data.(cangle).(crep) = [tbl.mSec(itrial),tbl.TORQUE(itrial)];
    end
    
end

%% Sets up Meta Data Analysis
info = trialDataImport(filename);
metadata.subject = string(info(1));
metadata.joint = string(info(19));
metadata.dof = string(info(20));
metadata.bdirection  = string(info(22));

if contains(metadata.joint,'Ankle')==1
    if contains(metadata.dof, 'Plantar') && contains(metadata.bdirection, 'TOWARDS')
        metadata.match = 'dors';
    else 
        metadata.match = 'plnt';
    end
    
elseif contains(metadata.joint,'Knee')==1
    if contains(metadata.dof, 'Extension') && contains(metadata.bdirection, 'TOWARDS')
        metadata.match = 'flx';
    else 
        metadata.match = 'ext';
    end
    
elseif  contains(metadata.joint,'Hip')==1
    if contains(metadata.dof, 'Extension') && contains(metadata.bdirection, 'TOWARDS')
        metadata.match = 'ext';
    elseif contains(metadata.dof, 'Extension') && contains(metadata.bdirection, 'AWAY')
        metadata.match = 'flx';
    elseif contains(metadata.dof, 'Abduction') && contains(metadata.bdirection, 'TOWARDS')
        metadata.match = 'ad';
    else 
        metadata.match = 'ab';
    end
end


end